// @strict-types

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать()
//	Если Корзина.Количество() = 0 Тогда
//		Возврат;
//	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВводаПароля", ЭтотОбъект);
	ОткрытьФорму("Обработка.РТЗ_РаботаТорговогоЗала.Форма.ВводПароля",,,,,,
		Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ПодборНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодборНаСервере()
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

//Вызывается в случае успешных проверок и нахождения менеджера
&НаСервере
Процедура СформироватьНаСервере()
	ДокументЗаказа = Документы.РТЗ_РозничныйЗаказ.СоздатьДокумент();
	ДокументЗаказа.Менеджер = Менеджер;
	ДокументЗаказа.Корзина.Загрузить(Корзина.Выгрузить());
	ДокументЗаказа.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
КонецПроцедуры

// Обработка оповещения
// Параметры:
//  Результат - СправочникСсылка.Пользователи - Ссылка на менеджера
//	ДопПараметры - Неопределено - допольнительные параметры, обычно массив
&НаКлиенте
Процедура ПослеЗакрытияВводаПароля(Результат, ДопПараметры) Экспорт
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = Строка(ТипЗнч(Результат));
	Сообщение.Сообщить();
	
	Если ЗначениеЗаполнено(Результат) Тогда

	КонецЕсли;
	
	//Формируем на сервере
	//СформироватьНаСервере();
КонецПроцедуры

#КонецОбласти
