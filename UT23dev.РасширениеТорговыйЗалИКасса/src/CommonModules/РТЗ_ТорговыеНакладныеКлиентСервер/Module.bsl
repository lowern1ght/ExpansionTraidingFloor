
#Область ПрограммныйИнтерфейс

#Если Сервер Тогда

// Сформировать накладные по складам чек ККМ.
// 
// Параметры:
//  Документ - ДокументСсылка.ЧекККМ
// Возвращаемое значение:
//  ТаблицаЗначений - Сформировать накладные по складам чек ККМ:
// * Склад - СправочникСсылка.Склады - Склад на который необходимо сформировать накладную
// * Товар - ТаблицаЗначений - ТаблицаЗначений с Товаром по данному складу (Номенклатура,Количество,Упаковки)
Функция СформироватьНакладныеПоСкладамЧекККМ(Документ) Экспорт
	
	Если Документ = Документы.ЧекККМ.ПустаяСсылка() Тогда
		ВызватьИсключение "Передана пустая ссылка";
	Иначе
		Документ = Документ.ПолучитьОбъект();
	КонецЕсли;
	
	Склады = Новый Массив; //Массив для ведения складов для вывода
	
	Для Каждого СтрокаДокумента Из Документ.Товары Цикл
		
		Если Не ЗначениеЗаполнено(Склады.Найти(СтрокаДокумента.РТЗ_Склад)) Тогда
			Склад = СтрокаДокумента.РТЗ_Склад.ПолучитьОбъект();
			
			Если Склад.РТЗ_ЭтоТорговыйЗал И Не Склад.РТЗ_НеПропускатьПриФормированииНакладных Тогда
				Склады.Добавить(СтрокаДокумента.РТЗ_Склад);
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	ТаблицаРезультат = ПолучитьКопиюТаблицыЗначенийРезультат();
	
	Для Каждого СкладСсылка Из Склады Цикл
		
		СтрокаРезультат = ТаблицаРезультат.Добавить();
		СтрокаРезультат.Товар = ПолучитьКопиюТаблицыЗначенийНоменклатурыДляРезультата();
		СтрокаРезультат.Склад = СкладСсылка;
		
		Для Каждого СтрокаДокумента Из Документ.Товары Цикл
			СтрокаТовар = СтрокаРезультат.Товар.Добавить();
			
			Если СтрокаДокумента.РТЗ_Склад = СкладСсылка Тогда
				СтрокаТовар.Номенклатура = СтрокаДокумента.Номенклатура;
				СтрокаТовар.Количество = СтрокаДокумента.КоличествоУпаковок;
				СтрокаТовар.Упаковка = СтрокаДокумента.Упаковка;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

#КонецЕсли

#Если Клиент Тогда
	
//Todo: Процедура
	
#КонецЕсли

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Если Сервер Тогда

// Получить шаблон таблицы значений номенклатуры.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Получить шаблон таблицы значений номенклатуры:
// * Номенклатура - СправочникСсылка.Номенклатура -
// * Упаковка - СправочникСсылка.УпаковкиЕдиницыИзмерения -
// * Количество - Число -
Функция ПолучитьКопиюТаблицыЗначенийНоменклатурыДляРезультата()
	
	ТаблицаТовар = Новый ТаблицаЗначений();
	
	ТаблицаТовар.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаТовар.Колонки.Добавить("Упаковка",     Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ТаблицаТовар.Колонки.Добавить("Количество",   Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 3, ДопустимыйЗнак.Неотрицательный)));
	
	Возврат ТаблицаТовар;
	
КонецФункции

// Получить шаблон таблицы значений результат.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Получить шаблон таблицы значений результат:
// * Склад - СправочникСсылка.Склады -
// * Товар - ТаблицаЗначений -
Функция ПолучитьКопиюТаблицыЗначенийРезультат()
	
	ТаблицаРезультат = Новый ТаблицаЗначений();
	
	ТаблицаРезультат.Колонки.Добавить("Склад",    Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаРезультат.Колонки.Добавить("Товар",    Новый ОписаниеТипов("ТаблицаЗначений"));
	
	Возврат ТаблицаРезультат;
	
КонецФункции

#КонецЕсли

#КонецОбласти

