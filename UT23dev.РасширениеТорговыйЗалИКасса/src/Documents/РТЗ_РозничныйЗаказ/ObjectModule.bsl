#Если Сервер Тогда

#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Параметры:
//  ТаблицаКорзина - ТаблицаЗначений
// Возвращаемое значение:
// - ТаблицаЗначений
Функция ЗаполнитьКолонкиЦенаИСумма(ТаблицаКорзина)
	Если Не ЗначениеЗаполнено(ТаблицаКорзина) Тогда
		ВызватьИсключение "Не заполнена таблица корзина";
	КонецЕсли;
	
	Если ТаблицаКорзина.Количество() = 0 Тогда
		ВызватьИсключение "Пустая корзина";
	КонецЕсли;
	
	Если ТаблицаКорзина.Колонки.Найти("Сумма") = Неопределено Тогда
		ТаблицаКорзина.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"), "Сумма", Неопределено);
	КонецЕсли;
	
	Если ТаблицаКорзина.Колонки.Найти("Цена") = Неопределено Тогда
		ТаблицаКорзина.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"), "Цена", Неопределено);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25() Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЦеныНоменклатуры25СрезПоследних.Номенклатура,
		|	ЦеныНоменклатуры25СрезПоследних.ВидЦены,
		|	ЦеныНоменклатуры25СрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры25.СрезПоследних КАК ЦеныНоменклатуры25СрезПоследних
		|ГДЕ
		|	ЦеныНоменклатуры25СрезПоследних.Номенклатура В (&Номенклатура)
		|	И ЦеныНоменклатуры25СрезПоследних.ВидЦены = &ВидЦены";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЦеныНоменклатуры25СрезПоследних.Номенклатура,
		|	ЦеныНоменклатуры25СрезПоследних.ВидЦены,
		|	ЦеныНоменклатуры25СрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатуры25СрезПоследних
		|ГДЕ
		|	ЦеныНоменклатуры25СрезПоследних.Номенклатура В (&Номенклатура)
		|	И ЦеныНоменклатуры25СрезПоследних.ВидЦены = &ВидЦены";
	КонецЕсли;
	
	ПараметрЗапросаСписокНоменклатуры = ТаблицаКорзина.ВыгрузитьКолонку("Номенклатура");
	Запрос.УстановитьПараметр("Номенклатура", ПараметрЗапросаСписокНоменклатуры);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаРезультатаЗапроса = РезультатЗапроса.Выгрузить();
	Если ТипЗнч(ВыборкаРезультатаЗапроса) = Тип("ТаблицаЗначений") Тогда
		
		Для Каждого Элемент Из ТаблицаКорзина Цикл
			СтрокаВыборки = ВыборкаРезультатаЗапроса.Найти(Элемент.Номенклатура);
			Если ЗначениеЗаполнено(СтрокаВыборки) тогда
				Элемент.Цена = СтрокаВыборки.Цена;
				Элемент.Сумма = Элемент.Цена * Элемент.Количество;
			КонецЕсли;
		КонецЦикла;
		
		Возврат ТаблицаКорзина;
	Иначе
		ВызватьИсключение "Тип значения результативной таблицы не совпадает с ожидаемым!";
	КонецЕсли;
КонецФункции

//Функция печати табличного документа розничного заказа
//
// Возвращаемое значение:
//  - ТабличныйДокумент
//  - Неопределено
Функция ПечататьЗаказСервер() Экспорт
	Перем Сумма, ТаблицаДляВывода;
	
	Если Не Проведен Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент();
	
	//Макет
	Макет = Документы.РТЗ_РозничныйЗаказ.ПолучитьМакет("Заказ");
	
	//Области
	ОбластьШапка  = Макет.ПолучитьОбласть("Заказ|Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Заказ|Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Заказ|Подвал");
	
	//Картинка штрихкода
	ШтрихкодПустой = ОбластьШапка.Рисунки.Штрихкод;
	РисунокШтрихкода = ПолучитьШтрихкод(ШтрихкодПустой.Ширина + ШтрихкодПустой.Ширина * 0.25, 
										ШтрихкодПустой.Высота + ШтрихкодПустой.Высота * 0.25, 4);
	
	//Область(Шапка)				
	ОбластьШапка.Рисунки.Штрихкод.Картинка = РисунокШтрихкода;
	ОбластьШапка.Параметры.НомерЗаказа = "Заказ №" + Номер;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ТаблицаДляВывода = Корзина.Выгрузить(); 
	ТаблицаДляВывода.Свернуть("Номенклатура,Склад", "Количество");
	
	//Область(Строка)
	ТаблицаДляОбхода = ЗаполнитьКолонкиЦенаИСумма(ТаблицаДляВывода);
	Для Каждого ЭлементТаблица Из ТаблицаДляОбхода Цикл
		ТекущаяНоменклатура = ЭлементТаблица.Номенклатура;
		ОбластьСтрока.Параметры.Артикул 		= ТекущаяНоменклатура.Артикул;
		ОбластьСтрока.Параметры.Номенклатура 	= ТекущаяНоменклатура.Наименование;
		ОбластьСтрока.Параметры.ЦенаXКоличество = Строка(ЭлементТаблица.Цена) + " руб." + " X " 
												+ Строка(ЭлементТаблица.Количество) + " (" +ТекущаяНоменклатура.ЕдиницаИзмерения + ")";
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	//Область(Подвал)
	Если Не ТаблицаДляОбхода.Колонки.Найти("Сумма") = Неопределено Тогда	
		ОбластьПодвал.Параметры.Сумма = Строка(Сумма) + " " + "руб.";
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЕсли;
	
	Наименование = "ЗаказРозничный_"+Номер;
	ТабличныйДокумент.ИспользуемоеИмяФайла = Наименование;
	ТабличныйДокумент.ИмяСохраненияПоложенияОкна = Наименование;
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	ТабличныйДокумент.ОтображатьСетку = Ложь;
	ТабличныйДокумент.АвтоМасштаб = Ложь;
	Возврат ТабличныйДокумент;
КонецФункции

// Получает изображение штрихкода
// 
// Параметры:
//  ШиринаШтрихкода - Число - значение ширины штрихкода
//  ВысотаШтрихкода - Число - значение высоты штрихкода
//  ЗначШтрихкод - Строка - Входные данные
//  ЗначТипШтрихкода - Число - тип штрих кода по документации
//  
//  Возвращаемое значение:
//   - Картинка
Функция ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ЗначТипШтрихкода) Экспорт
	ПараметрыШтрихкода = ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода();
	ПараметрыШтрихкода.Ширина = ШиринаШтрихкода;
	ПараметрыШтрихкода.Высота = ВысотаШтрихкода;
	ПараметрыШтрихкода.ТипКода = ЗначТипШтрихкода;
	ПараметрыШтрихкода.Штрихкод = Документы.РТЗ_РозничныйЗаказ.ЗакодироватьНомер(Номер);
	ПараметрыШтрихкода.ПрозрачныйФон = Истина;
	ПараметрыШтрихкода.УровеньКоррекцииQR = 2;
	ПараметрыШтрихкода.ОтображатьТекст = Ложь;
	ПараметрыШтрихкода.Масштабировать = Истина;
	ПараметрыШтрихкода.СохранятьПропорции = Истина;
	ПараметрыШтрихкода.ВертикальноеВыравнивание  = 1;
	ПараметрыШтрихкода.GS1DatabarКоличествоСтрок = 1;
	ПараметрыШтрихкода.ТипВходныхДанных = 0;
	
	РезультатШтрихкод = ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода);
	
	Возврат РезультатШтрихкод.Картинка;
КонецФункции

#КонецОбласти

#КонецЕсли