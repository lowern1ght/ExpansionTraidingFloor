#Область ОбработчикиСобытийФормы


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОбщегоНазначенияКлиент.СообщитьПользователю("Оповещение: " + ИмяСобытия);
	//ОбработкаОповещенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере()
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	АвтоЗаголовок = Ложь;
	
	Если ЗаполнитьНастройкамиТемриналаИВернутьСтатус() Тогда
		Возврат;	
	КонецЕсли;
	
	Заголовок = ("Рабочее место менеджера торгового зала / " + "Терминал: <" + ПолучитьНаименоваиеТекущегоТерминала() + ">");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОформитьВозврат(Команда)
	ОформитьВозвратНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать()
	Если Объект.Корзина.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВводаПароля", ЭтотОбъект);
	ОткрытьФорму("Документ.РТЗ_РозничныйЗаказ.Форма.ВводПароля",,,,,,
		Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
КонецПроцедуры

&НаКлиенте
Процедура Подбор()
	ПараметрЗаголовок = НСтр("ru = 'Подбор товаров в розничный заказ'");
	
	ПараметрыФормы = Новый Структура;
	
	//Todo: добавить валюту
	
	ПараметрыФормы.Вставить("Склад", СкладТерминал);
	ПараметрыФормы.Вставить("Документ", Объект.Ссылка);
	ПараметрыФормы.Вставить("ЦенаВключаетНДС", Истина);
	ПараметрыФормы.Вставить("ВидЦены", ВидЦеныТерминала);
	ПараметрыФормы.Вставить("Заголовок", ПараметрЗаголовок);
	ПараметрыФормы.Вставить("ИспользоватьДатыОтгрузки", Ложь);
	ПараметрыФормы.Вставить("РежимОтбораДляРозничныхПродаж", Истина);
	ПараметрыФормы.Вставить("РежимПодбораИспользоватьСкладыВТабличнойЧасти", Истина);
	
	ОткрытьФорму("Обработка.ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеЗакрытияПодбора(Результат, ДопПараметры) Экспорт
	//TODO: реалзовать подбор
КонецПроцедуры

&НаСервере
Функция ЗаполнитьНастройкамиТемриналаИВернутьСтатус()
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РТЗ_НастрокиРабочегоМеста.Настройки,
		|	РТЗ_НастрокиРабочегоМеста.Терминал
		|ИЗ
		|	РегистрСведений.РТЗ_НастрокиРабочегоМеста КАК РТЗ_НастрокиРабочегоМеста
		|ГДЕ
		|	РТЗ_НастрокиРабочегоМеста.Терминал = &Терминал";
	
	Запрос.УстановитьПараметр("Терминал", Пользователи.ТекущийПользователь());
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Настройки = ВыборкаДетальныеЗаписи.Настройки.ПолучитьОбъект();
		ВидЦеныТерминала = Настройки.ВидЦены;
		СкладТерминал 	 = Настройки.ГруппаСкладов;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(СкладТерминал) 
	Или Не ЗначениеЗаполнено(ВидЦеныТерминала) Тогда
		ОбщегоНазначения.СообщитьПользователю("Необходимо настроить текущий терминал");
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура ОформитьВозвратНаСервере()
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

// Возвращает имя текущего пользоватя
// Возвращаемое значение:
//  - Строка
&НаСервере
Функция ПолучитьНаименоваиеТекущегоТерминала()
	Возврат ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
КонецФункции

//Вызывается в случае успешных проверок и нахождения менеджера
// Параметры:
//  Менеджер - СправочникСсылка.Пользователи - ссылка на справочник пользователи
// Возвращаемое значение:
//  - ТабличныйДокумент
&НаСервере
Функция СформироватьНаСервере(Менеджер)	
	ДокументЗаказа = Документы.РТЗ_РозничныйЗаказ.СоздатьДокумент();
	ДокументЗаказа.Менеджер = Менеджер;
	ДокументЗаказа.Корзина.Загрузить(Объект.Корзина.Выгрузить());
	ДокументЗаказа.ВидЦены = ВидЦеныТерминала;
	ДокументЗаказа.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
	Возврат ДокументЗаказа.ПечататьЗаказСервер();
КонецФункции

// Обработка оповещения
// Параметры:
//  ПользовательСсылка - СправочникСсылка.Пользователи - Ссылка на менеджера
//  ДопПараметры - Неопределено
&НаКлиенте
Процедура ПослеЗакрытияВводаПароля(ПользовательСсылка, ДопПараметры = Неопределено) Экспорт
	Если Не ЗначениеЗаполнено(ПользовательСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check use-non-recommended-method
	СформироватьНаСервере(ПользовательСсылка)
		.Показать("Заказ_"+ТекущаяДата());
	Объект.Корзина.Очистить();
КонецПроцедуры

#КонецОбласти
